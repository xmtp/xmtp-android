name: Test
on:
  push:
    branches:
      - main
  pull_request:

env:
  GPR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GPR_USER: ${{ secrets.GITHUB_ACTOR }}

jobs:
  library-unit:
    name: Library (Unit Tests)
    runs-on: warp-ubuntu-latest-x64-16x
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Start Docker containers
        run: dev/up
      - name: Gradle Run Unit Tests
        run: ./gradlew library:testDebug
  library-integration:
    name: Library (Integration Tests)
    runs-on: warp-ubuntu-latest-x64-16x
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Start Docker containers
        run: dev/up
      - name: Gradle Run Integration Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -memory 4096 -partition-size 8192
          script: |
            export GRADLE_OPTS="-Xmx4096m -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
            ./gradlew connectedCheck --continue --stacktrace --info
      - name: Upload Test Reports on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-reports
          path: |
            library/build/reports/androidTests/
            library/build/outputs/androidTest-results/
          retention-days: 7
      - name: Display Test Failure Details
        if: failure()
        run: |
          echo "=== Test Failure Details ==="
          # Find and display the main test report
          if [ -f "library/build/reports/androidTests/connected/debug/index.html" ]; then
            echo "Test report location: library/build/reports/androidTests/connected/debug/index.html"
          fi

          # Look for XML test results and display failures
          find library/build/outputs/androidTest-results/ -name "*.xml" -type f 2>/dev/null | while read xml_file; do
            if grep -q "failures=" "$xml_file" && ! grep -q "failures=\"0\"" "$xml_file"; then
              echo "=== Failure details from $xml_file ==="
              # Extract and display failure information
              grep -A 10 -B 2 "failure\|error" "$xml_file" || true
            fi
          done

          # Look for logcat output if available
          if [ -f "library/build/outputs/androidTest-results/connected/debug/logcat.txt" ]; then
            echo "=== Recent logcat output ==="
            tail -100 library/build/outputs/androidTest-results/connected/debug/logcat.txt
          fi

          # Display gradle test output if available
          if [ -d "library/build/reports/tests" ]; then
            find library/build/reports/tests -name "*.html" -type f | head -5 | while read report; do
              echo "Found test report: $report"
            done
          fi
