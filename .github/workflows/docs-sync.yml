name: Sync Documentation

on:
  release:
    types: [published, edited, created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name to analyze (leave empty for latest)"
        required: false
        type: string

env:
  DOCS_REPO: xmtp/docs-xmtp-org
  BRANCH_PREFIX: auto-update-android-docs

jobs:
  sync-docs:
    name: Sync Android Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Android SDK
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: android-sdk

      - name: Checkout Documentation Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DOCS_REPO }}
          token: ${{ secrets.DOCS_SYNC_TOKEN }}
          path: docs-repo

      - name: Determine tag to analyze
        id: tag
        run: |
          cd android-sdk
          if [ -n "${{ github.event.inputs.tag_name }}" ]; then
            TAG="${{ github.event.inputs.tag_name }}"
          elif [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            TAG=$(git describe --tags --abbrev=0)
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Analyzing tag: $TAG"

      - name: Get previous tag for diff
        id: prev_tag
        run: |
          cd android-sdk
          CURRENT_TAG="${{ steps.tag.outputs.tag }}"
          PREV_TAG=$(git tag --sort=-version:refname | grep -A 1 "^$CURRENT_TAG$" | tail -n 1)
          if [ "$PREV_TAG" = "$CURRENT_TAG" ] || [ -z "$PREV_TAG" ]; then
            # If no previous tag or same tag, get the tag before current
            PREV_TAG=$(git tag --sort=-version:refname | head -n 2 | tail -n 1)
          fi
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
          echo "Previous tag: $PREV_TAG"

      - name: Create documentation analysis prompt
        run: |
          cat > docs-repo/analysis_prompt.md << 'EOF'
          # Documentation Sync Analysis

          You are tasked with analyzing changes in the XMTP Android SDK and updating documentation accordingly.

          ## Context
          - Current release tag: ${{ steps.tag.outputs.tag }}
          - Previous tag: ${{ steps.prev_tag.outputs.prev_tag }}
          - Android SDK repo: `android-sdk/`
          - Documentation repo: `docs-repo/`

          ## Task
          1. Analyze the diff between the previous tag and current tag in the Android SDK
          2. Identify API changes, new features, deprecated methods, and breaking changes
          3. Review documentation in `docs-repo/` for Android-related content
          4. Focus on code samples, API references, and integration guides
          5. Update documentation files in `docs-repo/` to match the current SDK state
          6. Ensure all Android code samples are accurate and use current APIs

          ## Key areas to check
          - Client initialization and configuration
          - Message sending and receiving
          - Group and DM management
          - Codec usage (attachments, reactions, etc.)
          - Push notification setup
          - Error handling patterns
          - Authentication flows

          ## Requirements
          - All code samples must compile with the current SDK version (${{ steps.tag.outputs.tag }})
          - Update version numbers in installation instructions
          - Flag any breaking changes that need migration guides
          - Maintain consistency with existing documentation style
          - Create clear, actionable updates
          - Use comprehensive analysis tools to ensure thorough coverage
          - Verify documentation accuracy by cross-referencing with source code
          - Search for related documentation files that may need updates

          ## Available Tools
          You have access to comprehensive tools including:
          - File operations (Read, Write, Edit, MultiEdit)
          - Search tools (Glob, Grep, Task)
          - Web tools (WebFetch, WebSearch) for additional context
          - Organization tools (TodoRead, TodoWrite) for systematic updates
          - Command execution (Bash) for git operations and analysis

          Use these tools systematically to ensure comprehensive documentation updates.

          ## Release Changes Summary
          EOF

          # Append the release diff to the prompt
          cd android-sdk
          echo "### Changed Files:" >> ../docs-repo/analysis_prompt.md
          git diff ${{ steps.prev_tag.outputs.prev_tag }}..${{ steps.tag.outputs.tag }} --name-only | head -30 >> ../docs-repo/analysis_prompt.md
          echo "" >> ../docs-repo/analysis_prompt.md
          echo "### Key API Changes:" >> ../docs-repo/analysis_prompt.md
          git diff ${{ steps.prev_tag.outputs.prev_tag }}..${{ steps.tag.outputs.tag }} -- library/src/main/java/org/xmtp/android/library/Client.kt library/src/main/java/org/xmtp/android/library/Conversation.kt library/src/main/java/org/xmtp/android/library/Group.kt library/src/main/java/org/xmtp/android/library/Dm.kt | head -100 >> ../docs-repo/analysis_prompt.md
          echo "" >> ../docs-repo/analysis_prompt.md
          echo "Please analyze these changes and update the documentation files in the docs-repo/ directory accordingly." >> ../docs-repo/analysis_prompt.md

      - name: Run Claude Code Documentation Analysis
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt_file: docs-repo/analysis_prompt.md
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          allowed_tools: "Bash,Read,Write,Edit,MultiEdit,Glob,Grep,LS,Task,WebFetch,WebSearch,TodoRead,TodoWrite,NotebookRead,NotebookEdit"
          max_turns: 15
          timeout_minutes: 20

      - name: Create branch and commit changes
        id: commit
        run: |
          cd docs-repo
          BRANCH_NAME="${{ env.BRANCH_PREFIX }}-${{ steps.tag.outputs.tag }}"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create and switch to new branch
          git checkout -b "$BRANCH_NAME"

          # Remove the analysis prompt file (internal workflow file)
          rm -f analysis_prompt.md

          # Check if there are any changes
          if git diff --quiet && git diff --cached --quiet; then
            echo "No documentation changes needed"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Documentation changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
            
            # Add all changes (excluding the removed prompt file)
            git add .
            
            # Commit changes
            git commit -m "Update Android SDK documentation for release ${{ steps.tag.outputs.tag }}

            Automated update based on changes in xmtp-android ${{ steps.tag.outputs.tag }}
            
            Changes analyzed:
            - API modifications and new features
            - Code sample accuracy
            - Version compatibility
            - Breaking changes documentation
            
            Generated by Claude Code Actions"
            
            # Push branch
            git push origin "$BRANCH_NAME"
          fi

      - name: Create Pull Request
        if: steps.commit.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.DOCS_SYNC_TOKEN }}
        run: |
          cd docs-repo

          # Create PR body
          PR_BODY="## ü§ñ Automated Android SDK Documentation Update

          This PR updates the documentation to align with Android SDK release [\`${{ steps.tag.outputs.tag }}\`](https://github.com/xmtp/xmtp-android/releases/tag/${{ steps.tag.outputs.tag }}).

          ### Changes Made
          - Updated code samples to match current SDK APIs
          - Verified Android integration examples
          - Updated version references and installation instructions
          - Addressed any breaking changes or deprecations

          ### Analysis Summary
          Documentation analysis and updates completed using Claude Code Actions.

          ### Verification Needed
          - [ ] Review all Android code samples for accuracy
          - [ ] Test integration examples
          - [ ] Verify version compatibility information
          - [ ] Check for any missed documentation updates

          ---
          *This PR was automatically generated by Claude Code Actions*"

          # Create the PR
          gh pr create \
            --title "üì± Update Android SDK docs for ${{ steps.tag.outputs.tag }}" \
            --body "$PR_BODY" \
            --head "${{ steps.commit.outputs.branch_name }}" \
            --base main \
            --label "android,automated,documentation"

      - name: Output results
        run: |
          if [ "${{ steps.commit.outputs.has_changes }}" = "true" ]; then
            echo "‚úÖ Documentation sync completed successfully"
            echo "üìù Pull request created in ${{ env.DOCS_REPO }}"
            echo "üîó Check: https://github.com/${{ env.DOCS_REPO }}/pulls"
          else
            echo "‚ÑπÔ∏è No documentation changes required for this release"
          fi
