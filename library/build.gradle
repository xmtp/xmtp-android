plugins {
    id 'signing'
    id 'maven-publish'
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf' version '0.9.1'
    id "org.jlleitschuh.gradle.ktlint" version "11.0.0"
}

android {
    namespace 'org.xmtp.android.library'
    compileSdk 33

    defaultConfig {
        minSdk 22
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        animationsDisabled = true
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.9"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.47.0"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.3.0:jdk8@jar"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
        all()*.builtins {
            kotlin {}
        }
    }
}

dependencies {
    implementation 'com.google.crypto.tink:tink:1.7.0'
    implementation 'com.google.protobuf:protobuf-kotlin:3.21.9'
    implementation 'io.grpc:grpc-kotlin-stub:1.3.0'
    implementation 'io.grpc:grpc-okhttp:1.51.1'
    implementation 'io.grpc:grpc-protobuf:1.51.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.web3j:crypto:5.0.0'
    implementation 'org.xmtp:proto-kotlin:3.13.4'

    testImplementation 'app.cash.turbine:turbine:0.12.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, androidSourcesJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = "org.xmtp"
                artifactId = "android"
                version = System.getenv("RELEASE_VERSION")

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = "XMTP"
                    description = "XMTP Android Library"
                    url = "https://github.com/xmtp/xmtp-android"
                    packaging = "jar"

                    licenses {
                        license {
                            name = "MIT License"
                            url = "https://github.com/xmtp/xmtp-android/blob/main/LICENSE"
                        }
                    }
                    developers {
                        developer {
                            id = "xmtp"
                            name = "xmtp"
                            email = "naomi@xmtp.com"
                        }
                    }
                    scm {
                        connection = "https://github.com/xmtp/xmtp-android.git"
                        developerConnection = "https://github.com/xmtp/xmtp-android.git"
                        url = "https://github.com/xmtp/xmtp-android/tree/main"
                    }
                }
            }
        }
    }
    signing {
        def signingKey = System.getenv("SIGN_KEY")
        def signingPassword = System.getenv("SIGN_PASSWORD")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.release
    }
}