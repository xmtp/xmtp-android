//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

package notifications.v1;

@kotlin.jvm.JvmName("-initializesubscribeRequest")
public inline fun subscribeRequest(block: notifications.v1.SubscribeRequestKt.Dsl.() -> kotlin.Unit): notifications.v1.Service.SubscribeRequest =
  notifications.v1.SubscribeRequestKt.Dsl._create(notifications.v1.Service.SubscribeRequest.newBuilder()).apply { block() }._build()
public object SubscribeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: notifications.v1.Service.SubscribeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: notifications.v1.Service.SubscribeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): notifications.v1.Service.SubscribeRequest = _builder.build()

    /**
     * <code>string installation_id = 1;</code>
     */
    public var installationId: kotlin.String
      @JvmName("getInstallationId")
      get() = _builder.getInstallationId()
      @JvmName("setInstallationId")
      set(value) {
        _builder.setInstallationId(value)
      }
    /**
     * <code>string installation_id = 1;</code>
     */
    public fun clearInstallationId() {
      _builder.clearInstallationId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TopicsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string topics = 2;</code>
     * @return A list containing the topics.
     */
    public val topics: com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTopicsList()
      )
    /**
     * <code>repeated string topics = 2;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTopics")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.add(value: kotlin.String) {
      _builder.addTopics(value)
    }
    /**
     * <code>repeated string topics = 2;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string topics = 2;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTopics")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllTopics(values)
    }
    /**
     * <code>repeated string topics = 2;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string topics = 2;</code>
     * @param index The index to set the value at.
     * @param value The topics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTopics")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setTopics(index, value)
    }/**
     * <code>repeated string topics = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTopics")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TopicsProxy>.clear() {
      _builder.clearTopics()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun notifications.v1.Service.SubscribeRequest.copy(block: notifications.v1.SubscribeRequestKt.Dsl.() -> kotlin.Unit): notifications.v1.Service.SubscribeRequest =
  notifications.v1.SubscribeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

